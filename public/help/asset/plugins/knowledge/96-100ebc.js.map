{"version":3,"file":"96-100ebc.js","mappings":"gNASc,SAAUA,EAAV,GAAgF,IAA9DC,OAAO,IAAEC,KAAQD,GAAnB,SAA4BE,GAAoC,EAC1F,MAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAOC,EAAAA,EAAAA,WAYb,OAVAL,GAAMM,EAAAA,EAAAA,UAAQ,KACV,GAAIN,KAAQO,EAAAA,EAAAA,OAAMP,GAAM,CACpB,MAAMQ,EAASN,EAAQO,YAAYC,IAAAA,KAAUA,IAAAA,QAAaC,EAAAA,QAAAA,SAAAA,UAA4BX,IAClFQ,IACAR,EAAMQ,EAAO,IAGrB,OAAOR,IACR,CAACI,KAEGQ,EAAAA,EAAAA,cAAaX,EAAW,CAC3BF,MAAO,IACAA,EACHC","sources":["webpack://TopWritePlugins.knowledge/./src/components/reader/asset.tsx"],"sourcesContent":["import { history, InjectedCompProps, isUrl, useFile } from 'topwrite';\r\nimport path from 'path';\r\nimport { useSubBook } from '@/lib/sub-book';\r\nimport { cloneElement, useMemo } from 'react';\r\n\r\ninterface Props {\r\n    src?: string;\r\n}\r\n\r\nexport default function Asset({ props: { src, ...props }, children }: InjectedCompProps<Props>) {\r\n    const subBook = useSubBook();\r\n    const file = useFile();\r\n\r\n    src = useMemo(() => {\r\n        if (src && !isUrl(src)) {\r\n            const result = subBook.validateUrl(path.join(path.dirname(history.location.pathname), src));\r\n            if (result) {\r\n                src = result[1];\r\n            }\r\n        }\r\n        return src;\r\n    }, [file]);\r\n\r\n    return cloneElement(children!, {\r\n        props: {\r\n            ...props,\r\n            src\r\n        }\r\n    });\r\n}\r\n"],"names":["Asset","props","src","children","subBook","useSubBook","file","useFile","useMemo","isUrl","result","validateUrl","path","history","cloneElement"],"sourceRoot":""}